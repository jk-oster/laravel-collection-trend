import{_ as o,c as i,a as l,b as s,d as n,e as r,f as a,r as p,o as c}from"./app-BiuS7RZ_.js";const d={};function h(u,e){const t=p("RouteLink");return c(),i("div",null,[e[5]||(e[5]=l(`<h2 id="why" tabindex="-1"><a class="header-anchor" href="#why"><span>Why?</span></a></h2><p>Most applications require charts or reports to be generated. Doing this over again, and again can be a painful process. For this reason I&#39;ve created a fluent Laravel package to solve this problem.</p><p>This package is heavily inspired by <a href="https://github.com/Flowframe/laravel-trend" target="_blank" rel="noopener noreferrer">laravel-trend</a> and exhibits for the biggest part exactly the same API for creating trends, however it operates on collections instead of models.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements"><span>Requirements</span></a></h2><p><strong>PHP 8.0+</strong> and <strong>Composer 2.0+</strong> installed.</p><h2 id="installation-setup" tabindex="-1"><a class="header-anchor" href="#installation-setup"><span>Installation &amp; Setup</span></a></h2><p>You can install this package with composer using the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#DCDCAA;">composer</span><span style="color:#CE9178;"> require</span><span style="color:#CE9178;"> jk-oster/laravel-collection-trend</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>To generate a trend for your collection of items, import the <code>JkOster\\CollectionTrend\\CollectionTrend</code> class and pass along a collectable.</p><p>Example:</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">// Totals per month</span></span>
<span class="line"><span style="color:#9CDCFE;">$trend</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">CollectionTrend</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">$collectable</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    -&gt;</span><span style="color:#DCDCAA;">between</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#9CDCFE;">        start</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">()-&gt;</span><span style="color:#DCDCAA;">startOfYear</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#9CDCFE;">        end</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">()-&gt;</span><span style="color:#DCDCAA;">endOfYear</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    -&gt;</span><span style="color:#DCDCAA;">perMonth</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    -&gt;</span><span style="color:#DCDCAA;">count</span><span style="color:#D4D4D4;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)),s("ul",null,[s("li",null,[n(t,{to:"/usage.html"},{default:r(()=>e[0]||(e[0]=[a("Detailed Usage Guide")])),_:1})]),s("li",null,[n(t,{to:"/example.html"},{default:r(()=>e[1]||(e[1]=[a("Code Examples")])),_:1})])]),e[6]||(e[6]=l('<h2 id="compatibility-with-flowframe-laravel-trend-api" tabindex="-1"><a class="header-anchor" href="#compatibility-with-flowframe-laravel-trend-api"><span>Compatibility with Flowframe/Laravel-Trend API</span></a></h2><p>The interface of the package is to the biggest part compatible with the <a href="https://github.com/Flowframe/Laravel-Trend" target="_blank" rel="noopener noreferrer">Laravel-Trend</a> package. You only need to exchange the <code>Trend::model($model)</code> calls with <code>CollectionTrend::make($collectable)</code>.</p><h2 id="license" tabindex="-1"><a class="header-anchor" href="#license"><span>License</span></a></h2>',3)),s("p",null,[e[3]||(e[3]=a("The MIT License (MIT). Please see ")),n(t,{to:"/LICENSE.html"},{default:r(()=>e[2]||(e[2]=[a("License File")])),_:1}),e[4]||(e[4]=a(" for more information."))]),e[7]||(e[7]=l('<h2 id="credits" tabindex="-1"><a class="header-anchor" href="#credits"><span>Credits</span></a></h2><p>Thanks to the creators of <a href="https://github.com/Flowframe/laravel-trend" target="_blank" rel="noopener noreferrer">flowframe/laravel-trend</a> for inspiration.</p><ul><li><a href="https://github.com/jk-oster" target="_blank" rel="noopener noreferrer">Jakob Osterberger</a></li><li><a href="https://github.com/jk-oster/laravel-collection-trend/contributors" target="_blank" rel="noopener noreferrer">All Contributors</a></li></ul>',3))])}const g=o(d,[["render",h],["__file","index.html.vue"]]),b=JSON.parse(`{"path":"/","title":"Docs","lang":"en-US","frontmatter":{"title":"Docs","description":"Generate trends from laravel collections. Easily create charts or reports.","home":false,"footer":"Made with ❤️ by <a href='https://jakobosterberger.com'>Jakob Osterberger</a> (c) 2024","footerHtml":true,"actions":[{"text":"Get Started","link":"/#installation-setup","type":"primary"},{"text":"Usage Guide","link":"/usage.html","type":"secondary"}],"features":[{"title":"Simplicity","details":"Easy to use fluent API for creating trends and reports with sensible defaults."},{"title":"Flexibility","details":"Can be used from simple trends up to complex reporting analysis through using Closures."},{"title":"Compatible","details":"Package is to the biggest part compatible with the Laravel-Trend package."}],"next":{"text":"Usage Guide","link":"/usage.html"}},"headers":[{"level":2,"title":"Why?","slug":"why","link":"#why","children":[]},{"level":2,"title":"Requirements","slug":"requirements","link":"#requirements","children":[]},{"level":2,"title":"Installation & Setup","slug":"installation-setup","link":"#installation-setup","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Compatibility with Flowframe/Laravel-Trend API","slug":"compatibility-with-flowframe-laravel-trend-api","link":"#compatibility-with-flowframe-laravel-trend-api","children":[]},{"level":2,"title":"License","slug":"license","link":"#license","children":[]},{"level":2,"title":"Credits","slug":"credits","link":"#credits","children":[]}],"git":{"updatedTime":1729785415000,"contributors":[{"name":"Jakob Osterberger","email":"98315600+jk-oster@users.noreply.github.com","commits":2,"url":"https://github.com/Jakob Osterberger"},{"name":"Jakob Osterberger","email":"s2010456022@students.fh-hagenberg.at","commits":10,"url":"https://github.com/Jakob Osterberger"}]},"filePathRelative":"README.md"}`);export{g as comp,b as data};
